import pg8000.native as pg8000
import pymongo
import getpass
import os

def test_postgresql():
    """–¢–µ—Å—Ç—É—î–º–æ —Ä—ñ–∑–Ω—ñ —Å–ø–æ—Å–æ–±–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ PostgreSQL"""
    username = getpass.getuser()
    
    connection_attempts = [
        # –°–ø—Ä–æ–±–∞ 1: –∑ postgres –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º
        {
            'host': 'localhost',
            'database': 'postgres',
            'user': 'postgres',
            'password': 'test123',
            'port': 5432,
            'name': 'postgres user'
        },
        # –°–ø—Ä–æ–±–∞ 2: –∑ –≤–∞—à–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º
        {
            'host': 'localhost',
            'database': 'postgres',
            'user': username,
            'port': 5432,
            'name': f'{username} user'
        },
        # –°–ø—Ä–æ–±–∞ 3: –∑ –≤–∞—à–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º —ñ –±–∞–∑–æ—é
        {
            'host': 'localhost',
            'database': username,
            'user': username,
            'port': 5432,
            'name': f'{username} user and database'
        }
    ]
    
    for config in connection_attempts:
        try:
            print(f"–°–ø—Ä–æ–±–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —è–∫ {config['name']}...")
            
            # –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ—Å—è
            if 'password' in config:
                conn = pg8000.connect(**config)
            else:
                conn = pg8000.connect(
                    host=config['host'],
                    database=config['database'],
                    user=config['user'],
                    port=config['port']
                )
            
            # –¢–µ—Å—Ç–æ–≤–∏–π –∑–∞–ø–∏—Ç
            result = conn.run("SELECT version()")
            print(f"‚úÖ PostgreSQL ({config['name']}): {result[0][0][:50]}...")
            
            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ä–æ–±–æ—á—É –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é
            working_config = config.copy()
            conn.close()
            return working_config
            
        except Exception as e:
            print(f"‚ùå PostgreSQL ({config['name']}): {e}")
    
    return None

def test_mongodb():
    try:
        client = pymongo.MongoClient("mongodb://localhost:27017/", serverSelectionTimeoutMS=2000)
        client.admin.command('ping')
        print("‚úÖ MongoDB: –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–µ!")
        client.close()
        return True
    except Exception as e:
        print(f"‚ùå MongoDB: {e}")
        return False

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω—å...")
    print("=" * 50)
    
    # –¢–µ—Å—Ç—É—î–º–æ PostgreSQL
    pg_config = test_postgresql()
    
    print("\n" + "=" * 50)
    
    # –¢–µ—Å—Ç—É—î–º–æ MongoDB
    mongo_ok = test_mongodb()
    
    print("=" * 50)
    
    if pg_config:
        print("üéâ PostgreSQL –ü–†–ê–¶–Æ–Ñ!")
        print("–†–æ–±–æ—á–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è:")
        for key, value in pg_config.items():
            if key != 'name':
                print(f"  {key}: {value}")
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ–∞–π–ª –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
        with open('working_config.py', 'w') as f:
            f.write("# –†–æ–±–æ—á–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è PostgreSQL\n")
            f.write("DATABASE_CONFIG = {\n")
            for key, value in pg_config.items():
                if key != 'name':
                    if isinstance(value, str):
                        f.write(f"    '{key}': '{value}',\n")
                    else:
                        f.write(f"    '{key}': {value},\n")
            f.write("}\n")
        
        print("\nüíæ –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –∑–±–µ—Ä–µ–∂–µ–Ω–∞ –≤ working_config.py")
        
        if mongo_ok:
            print("üéâ MongoDB –ü–†–ê–¶–Æ–Ñ!")
            print("\nüöÄ –í–°–ï –ì–û–¢–û–í–û! –ú–æ–∂–Ω–∞ –∑–∞–ø—É—Å–∫–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è!")
        else:
            print("‚ö†Ô∏è  MongoDB –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –æ–∫—Ä–µ–º–æ")
            print("   –ö–æ–º–∞–Ω–¥–∞: mongod --dbpath ~/data/db")
    else:
        print("üí• PostgreSQL –Ω–µ –ø—Ä–∞—Ü—é—î. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏:")
        print("   brew uninstall postgresql@14")
        print("   brew install postgresql@14")
        print("   brew services start postgresql@14")
