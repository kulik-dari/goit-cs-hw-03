import pg8000
from faker import Faker
import random

DATABASE_CONFIG = {
    'host': '127.0.0.1',
    'database': 'task_management',
    'user': 'dashakulikova',  # –ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á!
    'port': 5432
}

fake = Faker('uk_UA')

def seed_users(cursor, num_users=10):
    print(f"üìù –î–æ–¥–∞–≤–∞–Ω–Ω—è {num_users} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤...")
    for i in range(num_users):
        fullname = fake.name()
        email = fake.unique.email()
        cursor.execute(
            "INSERT INTO users (fullname, email) VALUES (%s, %s)",
            (fullname, email)
        )
    print(f"‚úÖ –î–æ–¥–∞–Ω–æ {num_users} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤")

def seed_tasks(cursor, num_tasks=25):
    print(f"üìù –î–æ–¥–∞–≤–∞–Ω–Ω—è {num_tasks} –∑–∞–≤–¥–∞–Ω—å...")
    
    # –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —Ç–∞ —Å—Ç–∞—Ç—É—Å—ñ–≤
    cursor.execute("SELECT id FROM users")
    user_ids = [row[0] for row in cursor.fetchall()]
    
    cursor.execute("SELECT id FROM status")
    status_ids = [row[0] for row in cursor.fetchall()]
    
    titles = [
        "–†–æ–∑—Ä–æ–±–∏—Ç–∏ –Ω–æ–≤–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª", "–í–∏–ø—Ä–∞–≤–∏—Ç–∏ –±–∞–≥", "–ù–∞–ø–∏—Å–∞—Ç–∏ —Ç–µ—Å—Ç–∏",
        "–û–Ω–æ–≤–∏—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—é", "–ü—Ä–æ–≤–µ—Å—Ç–∏ –∫–æ–¥-—Ä–µ–≤'—é", "–ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ CI/CD",
        "–û–ø—Ç–∏–º—ñ–∑—É–≤–∞—Ç–∏ –±–∞–∑—É –¥–∞–Ω–∏—Ö", "–°—Ç–≤–æ—Ä–∏—Ç–∏ API", "–ó—Ä–æ–±–∏—Ç–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥"
    ]
    
    for i in range(num_tasks):
        title = random.choice(titles)
        description = fake.text() if random.choice([True, False]) else None
        status_id = random.choice(status_ids)
        user_id = random.choice(user_ids)
        
        cursor.execute(
            "INSERT INTO tasks (title, description, status_id, user_id) VALUES (%s, %s, %s, %s)",
            (title, description, status_id, user_id)
        )
    
    print(f"‚úÖ –î–æ–¥–∞–Ω–æ {num_tasks} –∑–∞–≤–¥–∞–Ω—å")

def main():
    try:
        conn = pg8000.connect(**DATABASE_CONFIG)
        cursor = conn.cursor()
        
        print("üßπ –û—á–∏—â–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–∏—Ö –¥–∞–Ω–∏—Ö...")
        cursor.execute("DELETE FROM tasks")
        cursor.execute("DELETE FROM users")
        cursor.execute("ALTER SEQUENCE users_id_seq RESTART WITH 1")
        cursor.execute("ALTER SEQUENCE tasks_id_seq RESTART WITH 1")
        
        seed_users(cursor)
        seed_tasks(cursor)
        
        conn.commit()
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        cursor.execute("SELECT COUNT(*) FROM users")
        users_count = cursor.fetchone()[0]
        cursor.execute("SELECT COUNT(*) FROM tasks")
        tasks_count = cursor.fetchone()[0]
        
        print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {users_count}")
        print(f"   –ó–∞–≤–¥–∞–Ω—å: {tasks_count}")
        
        conn.close()
        print("üéâ –ó–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

if __name__ == "__main__":
    main()
